{
  "name": "upchieve-server",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "build": "./bin/build_backend.sh",
    "lint": "npm run lint:backend:dry",
    "build:database": "docker build -t subway-postgres .",
    "dev": "npm run build:frontend && npm run dev:backend & npm run dev:frontend",
    "dev:backend": "ts-node-dev -r dotenv/config -P tsconfig.server.json --watch server --transpile-only server/main",
    "dev:worker": "ts-node-dev -P tsconfig.server.json server/worker --watch server server/worker",
    "lint:backend": "prettier --write \"server/**/*.ts\" > /dev/null",
    "lint:backend:dry": "prettier --check \"server/**/*.ts\"",
    "lint:database": "prettier --write \"database/seeds/**/*.ts\" > /dev/null",
    "lint:database:dry": "prettier --check \"database/seeds/**/*.ts\"",
    "lint:sql": "./bin/lint_sql.sh",
    "lint:sql:check": "./bin/lint_sql_check.sh",
    "lint:sql:manual": "pg-formatter --keyword-case=\"uppercase\" --inplace --placeholder=\":\\w+!\"",
    "lint:write": "npm run lint:backend && npm run lint:sql",
    "start": "node -r newrelic build/main",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "jest -c jest.config.server.js --silent --group=-email --max_old_space_size=1536 --maxWorkers=3",
    "test:backend:debug": "jest -c jest.config.server.js --logHeapUsage --detectOpenHandles --group=-email",
    "test:backend:full": "jest -c jest.config.server.js --detectOpenHandles --silent",
    "test:backend:watch": "jest -c jest.config.server.js --watch --runInBand --detectOpenHandles --group=-email --group=-database",
    "test:database": "jest -c jest.config.database.js --max_old_space_size=1536 --maxWorkers=3",
    "worker": "node build/worker",
    "pgtyped": "pgtyped -w -c pgtyped.config.json",
    "pgtyped:seeds": "pgtyped --config database/seeds/pgtyped.config.json --watch",
    "pgtyped:check": "./bin/pgtyped_check.sh",
    "telepresence:intercept": "./bin/telepresence_intercept.sh",
    "telepresence:leave": "./bin/telepresence_leave.sh",
    "add-cron-jobs": "ts-node -P tsconfig.server.json server/scripts/add-cron-jobs.ts",
    "db:reset": "./bin/reset_db.sh",
    "db:schema": "PGPASSFILE=\"database/.pgpass\" psql -w -h localhost -p 5432 -d upchieve -U admin -f \"database/db_init/schema.sql\" &> /dev/null",
    "db:auth": "PGPASSFILE=\"database/.pgpass\" psql -w -h localhost -p 5432 -d upchieve -U admin -f \"database/db_init/auth.sql\" &> /dev/null",
    "db:seeds": "PGPASSFILE=\"database/.pgpass\" psql -w -h localhost -p 5432 -d upchieve -U admin -f \"database/db_init/test_seeds.sql\" -f \"database/db_init/seed_migrations.sql\" &> /dev/null",
    "db:reset-schema": "npm run db:reset && npm run db:schema && npm run db:auth",
    "db:reset-seeds": "npm run db:reset-schema && npm run db:seeds",
    "db:build-seeds": "npm run db:reset-schema && ./bin/build_static_seeds.sh 100",
    "db:dump": "dbmate --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" -s \"./database/db_init/schema.sql\" dump && PGPASSFILE=\"database/.pgpass\" pg_dump -a -f database/db_init/test_seeds.sql -n upchieve -h localhost -p 5432 -U admin upchieve && PGPASSFILE=\"database/.pgpass\" pg_dump -a -f \"database/db_init/seed_migrations.sql\" -t seed_migrations -h localhost -p 5432 -U admin upchieve",
    "db:schema-new": "dbmate -d \"./database/migrations\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" new",
    "db:seeds-new": "dbmate -d \"./database/seed-updates\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"seed_migrations\" new",
    "db:schema-up": "dbmate --no-dump-schema -d \"./database/migrations\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" up",
    "db:schema-down": "dbmate --no-dump-schema -d \"./database/migrations\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" down",
    "db:seeds-up": "dbmate --no-dump-schema -d \"./database/seed-updates\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"seed_migrations\" up",
    "db:seeds-down": "dbmate --no-dump-schema -d \"./database/seed-updates\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"seed_migrations\" down",
    "scan:diff": "git diff --staged --name-only -z | xargs -0 detect-secrets-hook --baseline .secrets.baseline --exclude-files package-lock.json",
    "scan:audit": "detect-secrets audit .secrets.baseline"
  },
  "pre-commit": [
    "scan:diff",
    "pgtyped:check",
    "lint:backend:dry",
    "lint:database:dry",
    "lint:sql:check"
  ],
  "dependencies": {
    "@azure/identity": "^1.2.3",
    "@azure/storage-blob": "^12.12.0",
    "@pgtyped/cli": "^0.13.0",
    "@pgtyped/query": "^0.13.0",
    "@sendgrid/mail": "^6.4.0",
    "@sentry/node": "^5.30.0",
    "@socket.io/redis-adapter": "^7.2.0",
    "@unleash/proxy": "^0.5.0",
    "aws-sdk": "^2.695.0",
    "axios": "^0.19.2",
    "base64url": "^3.0.1",
    "bcrypt": "^5.0.1",
    "body-parser": "^1.18.3",
    "bull": "^3.13.0",
    "case": "^1.6.3",
    "connect-pg-simple": "^7.0.0",
    "connect-timeout": "^1.9.0",
    "cookie-parser": "~1.3.5",
    "cors": "^2.8.5",
    "csurf": "^1.11.0",
    "csv-parse": "^4.4.6",
    "exceljs": "^4.2.1",
    "exponential-backoff": "^3.1.0",
    "express": "^4.16.4",
    "express-cache-controller": "^1.1.0",
    "express-ejs-layouts": "^2.5.0",
    "express-handlebars": "^5.3.0",
    "express-session": "^1.14.2",
    "express-ws": "^5.0.2",
    "firebase-admin": "^8.10.0",
    "helmet": "^4.6.0",
    "id128": "^1.6.6",
    "ioredis": "^4.25.0",
    "lodash": "^4.17.19",
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.33",
    "multer": "^1.4.5-lts.1",
    "newrelic": "^10.6.2",
    "nodemailer": "^6.6.0",
    "nodemailer-express-handlebars": "^4.0.0",
    "openai": "^4.20.0",
    "passport": "^0.4.1",
    "passport-google-oidc": "^0.1.0",
    "passport-local": "^1.0.0",
    "pg": "^8.7.3",
    "pg-formatter": "^1.3.0",
    "pino": "^8.5.0",
    "pino-http": "^8.2.0",
    "posthog-node": "^3.1.1",
    "quill-delta": "^4.2.2",
    "redlock": "^4.2.0",
    "runtypes": "^4.2.0",
    "socket.io": "^4.5.4",
    "socket.io-client": "^4.7.2",
    "swagger-ui-express": "^4.1.6",
    "ts-custom-error": "^3.2.0",
    "twilio": "^3.58.0",
    "typescript": "^4.5.5",
    "ua-parser-js": "^0.7.21",
    "unleash-client": "^3.11.0",
    "uuid": "^8.3.2",
    "validator": "^13.6.0",
    "yaml": "^1.10.0"
  },
  "devDependencies": {
    "@babel/core": "^7.14.3",
    "@babel/preset-env": "^7.10.3",
    "@babel/preset-typescript": "^7.10.1",
    "@types/bcrypt": "^5.0.0",
    "@types/bull": "^3.12.2",
    "@types/connect-pg-simple": "^7.0.0",
    "@types/connect-timeout": "0.0.34",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.6",
    "@types/csurf": "^1.11.2",
    "@types/express": "^4.17.11",
    "@types/express-handlebars": "^3.1.0",
    "@types/express-session": "^1.17.3",
    "@types/express-ws": "^3.0.1",
    "@types/faker": "^5.5.3",
    "@types/jest": "^29.5.11",
    "@types/lodash": "^4.14.149",
    "@types/multer": "^1.4.7",
    "@types/newrelic": "^9.13.0",
    "@types/node": "^16.11.6",
    "@types/nodemailer": "^6.4.1",
    "@types/nodemailer-express-handlebars": "^4.0.0",
    "@types/passport": "^1.0.7",
    "@types/passport-local": "^1.0.34",
    "@types/pg": "^8.6.4",
    "@types/qs": "^6.9.4",
    "@types/redlock": "^4.0.3",
    "@types/supertest": "^2.0.9",
    "@types/swagger-ui-express": "^4.1.2",
    "@types/tcp-port-used": "^1.0.0",
    "@types/ua-parser-js": "0.7.35",
    "@types/uuid": "^8.3.1",
    "@types/validator": "^13.6.3",
    "@typescript-eslint/eslint-plugin": "^2.27.0",
    "@typescript-eslint/parser": "^2.27.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^29.7.0",
    "babel-loader": "^8.2.2",
    "dotenv": "^16.3.1",
    "faker": "^5.5.3",
    "ioredis-mock": "^5.4.1",
    "jest": "^29.7.0",
    "jest-express": "^1.12.0",
    "jest-mock": "^29.7.0",
    "jest-runner-groups": "^2.2.0",
    "pre-commit": "^1.2.2",
    "prettier": "1.19.1",
    "supertest": "^4.0.2",
    "tcp-port-used": "^1.0.2",
    "testcontainers": "^9.12.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^8.9.0",
    "ts-node-dev": "^1.1.6",
    "type-fest": "^2.12.0"
  },
  "engines": {
    "node": "~16.16.0",
    "npm": "~8.11.0"
  },
  "standard": {
    "parser": "babel-eslint"
  }
}
