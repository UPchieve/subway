{
  "name": "upchieve-server",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "build:tsc": "tsc --p tsconfig.server.json",
    "deploy:dev": "./bin/deploy.sh dev",
    "dev:revision": "az containerapp revision list --name development-container-app-subway --resource-group development-resource-group | jq -r '.[0] | \"\\(.name) - \\(.properties.runningState)\"'",
    "deploy:local": "./bin/deploy.sh",
    "start": "node -r newrelic build/main",
    "start:worker": "node build/worker",
    "build:database": "docker build -t subway-postgres .",
    "dev:backend": "ts-node-dev -r dotenv/config -P tsconfig.server.json --watch server --transpile-only server/main",
    "dev:worker": "ts-node-dev -P tsconfig.server.json --watch server --transpile-only server/worker",
    "e2e:backend": "DOTENV_CONFIG_PATH=.env.e2e ts-node-dev -r dotenv/config -P tsconfig.server.json --watch server --transpile-only server/main",
    "e2e:destroy": "docker-compose --profile e2e down -v",
    "e2e:create": "docker-compose --profile e2e down -v && docker-compose --profile e2e up -d",
    "lint": "npm run lint:backend:dry",
    "lint:backend": "prettier --write \"server/**/*.ts\" > /dev/null",
    "lint:backend:dry": "prettier --check \"server/**/*.ts\"",
    "lint:database": "prettier --write \"database/seeds/**/*.ts\" > /dev/null",
    "lint:database:dry": "prettier --check \"database/seeds/**/*.ts\"",
    "lint:sql": "./bin/lint_sql.sh",
    "lint:sql:check": "./bin/lint_sql_check.sh",
    "lint:sql:manual": "pg-formatter --keyword-case=\"uppercase\" --inplace --placeholder=\":\\w+!\"",
    "lint:write": "npm run lint:backend && npm run lint:sql",
    "test": "npm run test:backend",
    "test:backend": "jest -c jest.config.server.js --group=-email --max_old_space_size=1536 --maxWorkers=3",
    "test:backend:coverage": "jest -c jest.config.server.js --coverage --group=-email --max_old_space_size=1536 --maxWorkers=3",
    "test:backend:debug": "jest -c jest.config.server.js --logHeapUsage --detectOpenHandles --group=-email",
    "test:backend:full": "jest -c jest.config.server.js --detectOpenHandles --silent",
    "test:backend:watch": "jest -c jest.config.server.js --watch --runInBand --detectOpenHandles --group=-email --group=-database",
    "test:database:parallel": "jest --group=database/parallel -c jest.config.database.js --max_old_space_size=1536 --maxWorkers=3",
    "test:database:sequential": "jest --group=database/sequential -c jest.config.database.js --max_old_space_size=1536 --runInBand",
    "test:database": "npm run test:database:parallel && npm run test:database:sequential",
    "pgtyped": "pgtyped -w -c pgtyped.config.json",
    "pgtyped:seeds": "pgtyped --config database/seeds/pgtyped.config.json --watch",
    "pgtyped:check": "./bin/pgtyped_check.sh",
    "add-cron-jobs": "ts-node -P tsconfig.server.json server/scripts/add-cron-jobs.ts",
    "db:reset": "./bin/reset_db.sh",
    "db:schema": "PGPASSFILE=\"database/.pgpass\" psql -w -h localhost -p 5432 -d upchieve -U admin -f \"database/db_init/schema.sql\" &> /dev/null",
    "db:auth": "PGPASSFILE=\"database/.pgpass\" psql -w -h localhost -p 5432 -d upchieve -U admin -f \"database/db_init/auth.sql\" &> /dev/null",
    "db:seeds": "PGPASSFILE=\"database/.pgpass\" psql -w -h localhost -p 5432 -d upchieve -U admin -f \"database/db_init/test_seeds.sql\" -f \"database/db_init/seed_migrations.sql\" &> /dev/null",
    "db:reset-schema": "npm run db:reset && npm run db:schema && npm run db:auth",
    "db:reset-seeds": "npm run db:reset-schema && npm run db:seeds",
    "db:build-seeds": "npm run db:reset-schema && ./bin/build_static_seeds.sh 100",
    "db:dump": "dbmate --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" -s \"./database/db_init/schema.sql\" dump && PGPASSFILE=\"database/.pgpass\" pg_dump -a -f database/db_init/test_seeds.sql -n upchieve -h localhost -p 5432 -U admin upchieve && PGPASSFILE=\"database/.pgpass\" pg_dump -a -f \"database/db_init/seed_migrations.sql\" -t seed_migrations -h localhost -p 5432 -U admin upchieve",
    "db:schema-new": "dbmate -d \"./database/migrations\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" new",
    "db:seeds-new": "dbmate -d \"./database/seed-updates\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"seed_migrations\" new",
    "db:schema-up": "dbmate --no-dump-schema -d \"./database/migrations\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" up",
    "db:schema-down": "dbmate --no-dump-schema -d \"./database/migrations\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"schema_migrations\" down",
    "db:seeds-up": "dbmate --no-dump-schema -d \"./database/seed-updates\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"seed_migrations\" up",
    "db:seeds-down": "dbmate --no-dump-schema -d \"./database/seed-updates\" --url=\"postgres://admin:Password123@localhost:5432/upchieve?sslmode=disable\" --migrations-table=\"seed_migrations\" down",
    "scan:add": "detect-secrets scan --baseline .secrets.baseline --exclude-files package-lock.json",
    "scan:diff": "git diff --staged --name-only -z | xargs -0 detect-secrets-hook --baseline .secrets.baseline --exclude-files package-lock.json",
    "scan:audit": "detect-secrets audit .secrets.baseline"
  },
  "pre-commit": [
    "scan:diff",
    "pgtyped:check",
    "lint:backend:dry",
    "lint:database:dry",
    "lint:sql:check"
  ],
  "dependencies": {
    "@aws-sdk/client-bedrock-runtime": "^3.758.0",
    "@aws-sdk/client-chime-sdk-media-pipelines": "^3.777.0",
    "@aws-sdk/client-chime-sdk-meetings": "^3.731.1",
    "@aws-sdk/client-comprehend": "^3.726.1",
    "@aws-sdk/client-rekognition": "^3.726.0",
    "@aws-sdk/client-s3": "^3.588.0",
    "@aws-sdk/client-transcribe-streaming": "^3.744.0",
    "@aws-sdk/s3-request-presigner": "^3.588.0",
    "@azure-rest/ai-content-safety": "^1.0.0",
    "@azure-rest/ai-vision-image-analysis": "^1.0.0-beta.2",
    "@azure/core-auth": "^1.7.2",
    "@azure/identity": "^1.2.3",
    "@azure/storage-blob": "^12.12.0",
    "@sendgrid/mail": "^6.4.0",
    "@sentry/node": "^8.47.0",
    "@sentry/profiling-node": "^8.47.0",
    "@sentry/utils": "^8.47.0",
    "@socket.io/admin-ui": "^0.5.1",
    "@socket.io/redis-streams-adapter": "^0.2.2",
    "axios": "^1.6.8",
    "base64url": "^3.0.1",
    "bcrypt": "^5.0.1",
    "bull": "^3.13.0",
    "case": "^1.6.3",
    "connect-pg-simple": "^7.0.0",
    "connect-timeout": "^1.9.0",
    "cookie-parser": "~1.3.5",
    "cors": "^2.8.5",
    "csrf-sync": "^4.0.3",
    "csv-parse": "^5.5.6",
    "exceljs": "^4.2.1",
    "exponential-backoff": "^3.1.0",
    "express": "^4.16.4",
    "express-cache-controller": "^1.1.0",
    "express-ejs-layouts": "^2.5.0",
    "express-session": "^1.14.2",
    "express-ws": "^5.0.2",
    "firebase-admin": "^8.10.0",
    "id128": "^1.6.6",
    "ioredis": "^4.25.0",
    "jsonwebtoken": "^9.0.2",
    "langfuse": "^3.11.2",
    "langfuse-node": "^3.11.2",
    "lodash": "^4.17.19",
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.33",
    "multer": "^1.4.5-lts.1",
    "newrelic": "^11.17.0",
    "openai": "^4.47.1",
    "passport": "^0.4.1",
    "passport-google-oidc": "^0.1.0",
    "passport-local": "^1.0.0",
    "passport-oauth2": "^1.8.0",
    "pg": "^8.7.3",
    "pg-formatter": "^1.3.0",
    "pino": "^8.5.0",
    "pino-http": "^8.2.0",
    "posthog-node": "^4.0.0",
    "quill-delta": "^4.2.2",
    "redlock": "^4.2.0",
    "runtypes": "^4.2.0",
    "sharp": "^0.33.3",
    "socket.io": "^4.7.5",
    "socket.io-client": "^4.7.5",
    "swagger-ui-express": "^4.1.6",
    "tremendous": "^3.8.0",
    "ts-custom-error": "^3.2.0",
    "twilio": "^3.58.0",
    "typescript": "^4.5.5",
    "ua-parser-js": "^0.7.21",
    "uuid": "^8.3.2",
    "validator": "^13.6.0",
    "yaml": "^1.10.0",
    "yjs": "^13.6.11"
  },
  "devDependencies": {
    "@faker-js/faker": "^8.4.1",
    "@pgtyped/cli": "^2.3.0",
    "@pgtyped/query": "^2.3.0",
    "@types/bcrypt": "^5.0.0",
    "@types/bull": "^3.12.2",
    "@types/connect-pg-simple": "^7.0.0",
    "@types/connect-timeout": "0.0.34",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.6",
    "@types/csurf": "^1.11.2",
    "@types/express": "^4.17.11",
    "@types/express-session": "^1.17.3",
    "@types/express-ws": "^3.0.1",
    "@types/jest": "^29.5.11",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/lodash": "^4.14.149",
    "@types/multer": "^1.4.7",
    "@types/newrelic": "^9.14.3",
    "@types/node": "^16.11.6",
    "@types/passport": "^1.0.7",
    "@types/passport-local": "^1.0.34",
    "@types/passport-oauth2": "^1.4.15",
    "@types/pg": "^8.6.4",
    "@types/qs": "^6.9.4",
    "@types/redlock": "^4.0.3",
    "@types/supertest": "^2.0.9",
    "@types/swagger-ui-express": "^4.1.2",
    "@types/tcp-port-used": "^1.0.0",
    "@types/ua-parser-js": "0.7.35",
    "@types/uuid": "^8.3.1",
    "@types/validator": "^13.6.3",
    "dotenv": "^16.3.1",
    "ioredis-mock": "^5.4.1",
    "jest": "^29.7.0",
    "jest-express": "^1.12.0",
    "jest-mock": "^29.7.0",
    "jest-runner-groups": "^2.2.0",
    "pino-pretty": "^10.3.1",
    "pre-commit": "^1.2.2",
    "prettier": "^3.5.3",
    "supertest": "^4.0.2",
    "tcp-port-used": "^1.0.2",
    "testcontainers": "^9.12.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^8.9.0",
    "ts-node-dev": "^1.1.6",
    "type-fest": "^2.12.0"
  },
  "engines": {
    "node": "~20.10.0",
    "npm": "~10.2.3"
  }
}
